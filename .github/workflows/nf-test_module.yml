name: Test nf-scil module

on:
  workflow_dispatch:
    inputs:
      paths:
        description: "Paths nf-test should look into for tests"
        required: true
        type: string
      profile:
        description: "Which profile to use to run the module's tests"
        default: 'docker'
        type: choice
        options:
          - docker
          - singularity
      runner:
          description: "Runner label to use for the test run"
          default: 'ubuntu-latest'
          type: string
  workflow_call:
    inputs:
      profile:
        description: |
          Which profile to use to run the module's tests, either :
            - docker
            - singularity
        default: 'docker'
        type: string
      paths:
        description: "Paths nf-test should look into for tests"
        required: true
        type: string
      runner:
        description: "Runner label to use for the test run"
        default: 'ubuntu-latest'
        type: string

env:
  NXF_SINGULARITY_CACHEDIR: /home/runner/.singularity_cache/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity

run-name: Run nf-test on ${{ inputs.paths }}
jobs:
  nf-test:
    runs-on: ${{ inputs.runner }}
    name: nf-test-${{ inputs.paths }}
    if: inputs.paths != '' && inputs.profile != 'do-not-run'
    env:
      NXF_ANSI_LOG: false
      NFTEST_VER: "0.9.0-rc1"
      NFSCIL_TEST_DATA_HOME: /home/runner/_work

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Setup nf-test
        uses: AlexVCaron/setup-nf-test@2c5a31b90b34d97abf155b57ee0f79c7f5aa118a
        # Used to make the action executable on our runners. Related to how the home
        # and work directories are set up from ephemeral disks. See nf-core/setup-nf-test/issues/6
        with:
          version: ${{ env.NFTEST_VER }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4
        id: cache-pip-pdiff
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pdiff
          restore-keys: |
            ${{ runner.os }}-pip-pdiff

      - uses: actions/github-script@v7
        id: test-run-identifier
        with:
          script: |
            identifier='${{ inputs.paths }}'.toLowerCase().replaceAll(/[/. ]+/g, '-').trim('-');
            core.setOutput('tag', identifier);

      - uses: actions/cache@v4
        with:
          path: ${{ env.NFSCIL_TEST_DATA_HOME }}/nf-scil-test-archives
          key: nf-scil-test-data-cache-${{ steps.test-run-identifier.outputs.tag }}

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pdiff cryptography

      - name: Run nf-test
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
        run: |
          # use "docker_self_hosted" if it runs on self-hosted runner and inputs.profile=docker
          if [ "${{ inputs.profile }}" == "docker" ]; then
            PROFILE="docker_self_hosted"
          else
            PROFILE=${{ inputs.profile }}
          fi

          # nf-test directories need to be placed on an ephemeral disk accessible to docker.
          # In our case, it's only the _work workspace for security reasons
          mkdir -p /home/runner/_work/tmpdir

          TMPDIR=/home/runner/_work/tmpdir \
          NFT_WORKDIR=/home/runner/_work \
          nf-test test \
            --profile=$PROFILE \
            --tap=test.tap \
            --verbose \
            --debug \
            ${{ inputs.paths }}

      - uses: pcolby/tap-summary@v1
        with:
          path: >-
            test.tap

      - name: Tests logs
        if: failure()
        run: |
            shopt -s globstar
            for f in /home/runner/_work/tests/**/work/**/.command.log
            do

            echo "$(sed '3q;d' $(dirname $f)/.command.run)"
            cat $f

            done

      - name: Upload images as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: image_artifacts-${{ steps.test-run-identifier.outputs.tag }}
          path: /home/runner/_work/tests/**/work/**/*.nii.gz
          overwrite: true
          retention-days: 2
          compression-level: 9

      - name: Clean up
        if: always()
        run: |
          sudo rm -rf /home/ubuntu/tests/
